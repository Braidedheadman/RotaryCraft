/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2014
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 16/02/2013 12:10:02 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.RotaryCraft.Models;

import java.util.ArrayList;

import net.minecraft.client.model.ModelRenderer;
import Reika.RotaryCraft.Base.RotaryModelBase;

public class ModelAerosolizer extends RotaryModelBase
{
	//fields
	ModelRenderer Shape1;
	ModelRenderer Shape2;
	ModelRenderer Shape3;
	ModelRenderer Shape4;
	ModelRenderer Shape5;
	ModelRenderer Shape6;
	ModelRenderer Shape7;
	ModelRenderer Shape8;
	ModelRenderer Shape9;
	ModelRenderer Shape10;
	ModelRenderer Shape11;

	public ModelAerosolizer()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new ModelRenderer(this, 0, 0);
		Shape1.addBox(0F, 0F, 0F, 16, 12, 16);
		Shape1.setRotationPoint(-8F, 12F, -8F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new ModelRenderer(this, 0, 28);
		Shape2.addBox(0F, 0F, 0F, 14, 2, 1);
		Shape2.setRotationPoint(-7F, 10F, -8F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape3 = new ModelRenderer(this, 0, 28);
		Shape3.addBox(0F, 0F, 0F, 14, 2, 1);
		Shape3.setRotationPoint(-7F, 10F, 7F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape4 = new ModelRenderer(this, 0, 28);
		Shape4.addBox(0F, 0F, 0F, 14, 2, 1);
		Shape4.setRotationPoint(-7F, 10F, 2F);
		Shape4.setTextureSize(128, 128);
		Shape4.mirror = true;
		this.setRotation(Shape4, 0F, 0F, 0F);
		Shape5 = new ModelRenderer(this, 0, 28);
		Shape5.addBox(0F, 0F, 0F, 14, 2, 1);
		Shape5.setRotationPoint(-7F, 10F, -3F);
		Shape5.setTextureSize(128, 128);
		Shape5.mirror = true;
		this.setRotation(Shape5, 0F, 0F, 0F);
		Shape6 = new ModelRenderer(this, 64, 0);
		Shape6.addBox(0F, 0F, 0F, 1, 2, 16);
		Shape6.setRotationPoint(7F, 10F, -8F);
		Shape6.setTextureSize(128, 128);
		Shape6.mirror = true;
		this.setRotation(Shape6, 0F, 0F, 0F);
		Shape7 = new ModelRenderer(this, 64, 0);
		Shape7.addBox(0F, 0F, 0F, 1, 2, 14);
		Shape7.setRotationPoint(-3F, 10.2F, -7F);
		Shape7.setTextureSize(128, 128);
		Shape7.mirror = true;
		this.setRotation(Shape7, 0F, 0F, 0F);
		Shape8 = new ModelRenderer(this, 64, 0);
		Shape8.addBox(0F, 0F, 0F, 1, 2, 14);
		Shape8.setRotationPoint(2F, 10.2F, -7F);
		Shape8.setTextureSize(128, 128);
		Shape8.mirror = true;
		this.setRotation(Shape8, 0F, 0F, 0F);
		Shape9 = new ModelRenderer(this, 64, 0);
		Shape9.addBox(0F, 0F, 0F, 1, 2, 16);
		Shape9.setRotationPoint(-8F, 10F, -8F);
		Shape9.setTextureSize(128, 128);
		Shape9.mirror = true;
		this.setRotation(Shape9, 0F, 0F, 0F);
		Shape10 = new ModelRenderer(this, 0, 46);
		Shape10.addBox(0F, 0F, 0F, 14, 1, 14);
		Shape10.setRotationPoint(-7F, 10.5F, -7F);
		Shape10.setTextureSize(128, 128);
		Shape10.mirror = true;
		this.setRotation(Shape10, 0F, 0F, 0F);
		Shape11 = new ModelRenderer(this, 0, 31);
		Shape11.addBox(0F, 0F, 0F, 14, 1, 14);
		Shape11.setRotationPoint(-7F, 11.5F, -7F);
		Shape11.setTextureSize(128, 128);
		Shape11.mirror = true;
		this.setRotation(Shape11, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(ArrayList li, float phi, float theta)
	{
		boolean on = (Boolean)li.get(0);
		Shape1.render(f5);
		Shape2.render(f5);
		Shape3.render(f5);
		Shape4.render(f5);
		Shape5.render(f5);
		Shape6.render(f5);
		Shape7.render(f5);
		Shape8.render(f5);
		Shape9.render(f5);
		if (on)
			Shape10.render(f5);
		Shape11.render(f5);
	}

}
